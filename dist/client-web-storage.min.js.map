{
  "version": 3,
  "sources": ["../node_modules/localforage/dist/localforage.js", "../src/utils/is-nil.ts", "../src/utils/generate-uuid.ts", "../src/Schema.ts", "../src/ClientStore.ts", "../src/MemoryStore.ts", "../src/client.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "export const isNil = (val: any) => val === null || val === undefined;\n", "// https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nexport const generateUUID = () => {\n\tlet d = new Date().getTime();//Timestamp\n\tlet d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n\t\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tlet r = Math.random() * 16; //random number between 0 and 16\n\t\t\n\t\tif(d > 0){ //Use timestamp until depleted\n\t\t\tr = (d + r)%16 | 0;\n\t\t\td = Math.floor(d/16);\n\t\t} else {//Use microseconds since page-load if supported\n\t\t\tr = (d2 + r)%16 | 0;\n\t\t\td2 = Math.floor(d2/16);\n\t\t}\n\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t});\n}\n", "import {isNil} from \"./utils/is-nil\";\nimport {generateUUID} from \"./utils/generate-uuid\";\n\nexport class SchemaId {\n\tvalue = (() => {\n\t\ttry {\n\t\t\treturn crypto.randomUUID();\n\t\t} catch (e) {\n\t\t\treturn generateUUID();\n\t\t}\n\t})();\n}\n\nconst getDefaultValue = (type: Schema.Type) => {\n\tswitch (type) {\n\t\tcase Number:\n\t\t\treturn 0;\n\t\tcase Boolean:\n\t\t\treturn false;\n\t\tcase String:\n\t\t\treturn \"\";\n\t\tcase Array:\n\t\tcase Float32Array:\n\t\tcase Float64Array:\n\t\tcase Int8Array:\n\t\tcase Int16Array:\n\t\tcase Int32Array:\n\t\tcase Uint8Array:\n\t\tcase Uint8ClampedArray:\n\t\tcase Uint16Array:\n\t\tcase Uint32Array:\n\t\t\treturn new type();\n\t\tcase ArrayBuffer:\n\t\t\treturn new type(0);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst isSameValueType = (type: Schema.Type, value: any) => {\n\ttry {\n\t\t// @ts-ignore\n\t\treturn value instanceof type || typeof value === type.name.toLowerCase()\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nexport class SchemaValue {\n\tconstructor(public type: Schema.Type | Schema<any>, public required = false, public defaultValue: Schema.ValueType = null) {\n\t\tif (defaultValue !== null && !isSameValueType(type, defaultValue)) {\n\t\t\tthrow new Error(`Default value \"${defaultValue.toString()}\" does not match type \"${type.name}\"`);\n\t\t}\n\t\t\n\t\tthis.defaultValue = defaultValue ?? getDefaultValue(this.type);\n\t}\n\t\n\ttoJSON(): Schema.JSONValue {\n\t\treturn {\n\t\t\ttype: this.type instanceof Schema ? this.type.toJSON() : this.type.name,\n\t\t\trequired: this.required,\n\t\t\tdefaultValue: this.defaultValue\n\t\t}\n\t}\n\t\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4)\n\t}\n}\n\nexport class Schema<T extends Schema.DefaultValue> {\n\t#defaultKeys = [\"id\", \"createdDate\", \"lastUpdatedDate\"]\n\t#obj: Schema.Map = {\n\t\tid: new SchemaValue(SchemaId, false),\n\t\tcreatedDate: new SchemaValue(Date, false),\n\t\tlastUpdatedDate: new SchemaValue(Date, false),\n\t};\n\t#name: string;\n\t#includeDefaultKeys = true;\n\t\n\tconstructor(name: string, obj: Schema.Map | null = null, includeDefaultKeys = true) {\n\t\tthis.#name = name;\n\t\tthis.#includeDefaultKeys = includeDefaultKeys;\n\t\t\n\t\tif (!includeDefaultKeys) {\n\t\t\tthis.#obj = {};\n\t\t}\n\t\t\n\t\tif (obj) {\n\t\t\tfor (let objKey in obj) {\n\t\t\t\tif (obj.hasOwnProperty(objKey)) {\n\t\t\t\t\tif (obj[objKey] instanceof SchemaValue) {\n\t\t\t\t\t\tif (!this.#defaultKeys.includes(objKey)) {\n\t\t\t\t\t\t\tthis.#obj[objKey] = obj[objKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`Field \"${objKey}\" is not a SchemaValue`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tget name() {\n\t\treturn this.#name;\n\t}\n\t\n\tget includeDefaultKeys() {\n\t\treturn this.#includeDefaultKeys;\n\t}\n\t\n\tget defaultKeys() {\n\t\treturn this.#defaultKeys;\n\t}\n\t\n\tdefineField(name: keyof T, type: Schema.Type, {\n\t\tdefaultValue,\n\t\trequired\n\t}: { defaultValue?: any, required?: boolean } = {defaultValue: null, required: false}) {\n\t\tthis.#obj[`${name}`] = new SchemaValue(type, required, defaultValue);\n\t}\n\t\n\tremoveField(name: string | keyof T): void {\n\t\tif (name) {\n\t\t\tconst [first, ...others] = `${name}`.split(\".\");\n\t\t\t\n\t\t\tconst field = this.#obj[first];\n\t\t\t\n\t\t\tif (field) {\n\t\t\t\tif (others.length) {\n\t\t\t\t\tif (field.type instanceof Schema) {\n\t\t\t\t\t\tfield.type.removeField(others.join('.'));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.#obj[first];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\thasField(name: string | keyof T): boolean {\n\t\tif (name) {\n\t\t\tconst [first, ...others] = `${name}`.split(\".\");\n\t\t\t\n\t\t\tconst field = this.#obj[first];\n\t\t\t\n\t\t\tif (field) {\n\t\t\t\tif (others.length) {\n\t\t\t\t\tif (field.type instanceof Schema) {\n\t\t\t\t\t\treturn field.type.hasField(others.join('.'))\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn this.#obj.hasOwnProperty(first);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tgetField(name: string | keyof T): SchemaValue | null {\n\t\tif (name) {\n\t\t\tconst [first, ...others] = `${name}`.split(\".\");\n\t\t\t\n\t\t\tconst field = this.#obj[first];\n\t\t\t\n\t\t\tif (field && others.length) {\n\t\t\t\tif (field.type instanceof Schema) {\n\t\t\t\t\treturn field.type.getField(others.join('.'))\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn field ?? null;\n\t\t}\n\t\t\n\t\treturn null\n\t}\n\t\n\tisValidFieldValue(name: string | keyof T, value: any = null): boolean {\n\t\tconst val = this.getField(`${name}`) as SchemaValue;\n\t\t\n\t\tif (val) {\n\t\t\tif (value instanceof Array && value.some(v => !isSupportedTypeValue(v))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (val.type instanceof Schema) {\n\t\t\t\treturn `${value}` === '[object Object]' && val.type.getInvalidSchemaDataFields(value).length === 0;\n\t\t\t}\n\t\t\t\n\t\t\treturn val.required\n\t\t\t\t? !isNil(value) && isSameValueType(val.type, value)\n\t\t\t\t: value === null || value === val.defaultValue || isSameValueType(val.type, value);\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tgetInvalidSchemaDataFields(value: { [k: string]: any }): string[] {\n\t\tconst invalidFields: Set<string> = new Set();\n\t\t\n\t\tconst requiredFields = Object.keys(this.#obj).filter(key => this.#obj[key].required);\n\t\t\n\t\tfor (const valueKey of [...Object.keys(value), ...requiredFields]) {\n\t\t\tif (!this.defaultKeys.includes(valueKey)) {\n\t\t\t\tconst schemaVal = this.getField(valueKey as keyof T);\n\t\t\t\t\n\t\t\t\tif (schemaVal?.type instanceof Schema) {\n\t\t\t\t\tconst v = value[valueKey];\n\t\t\t\t\tif (`${v}` === '[object Object]') {\n\t\t\t\t\t\tschemaVal.type.getInvalidSchemaDataFields(v).map((k: string) => {\n\t\t\t\t\t\t\tinvalidFields.add(`${valueKey}.${k}`)\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinvalidFields.add(valueKey);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!this.isValidFieldValue(valueKey as keyof T, value[valueKey])) {\n\t\t\t\t\tinvalidFields.add(valueKey);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn Array.from(invalidFields);\n\t}\n\t\n\ttoJSON(): Schema.JSON {\n\t\tconst json: Schema.JSON = {};\n\t\t\n\t\tfor (let mapKey in this.#obj) {\n\t\t\tif (this.#obj.hasOwnProperty(mapKey)) {\n\t\t\t\tconst val = this.#obj[mapKey];\n\t\t\t\t\n\t\t\t\tjson[mapKey] = val.toJSON();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn json;\n\t}\n\t\n\ttoString() {\n\t\treturn JSON.stringify(this.toJSON(), null, 4)\n\t}\n\t\n\ttoValue(): T {\n\t\tconst nowDate = new Date();\n\t\t\n\t\tconst obj: { [k: string]: any } = this.includeDefaultKeys ? {\n\t\t\t// set default key values\n\t\t\tid: (new SchemaId()).value,\n\t\t\tcreatedDate: nowDate,\n\t\t\tlastUpdatedDate: nowDate,\n\t\t} : {};\n\t\t\n\t\tfor (let mapKey in this.#obj) {\n\t\t\tif (this.#obj.hasOwnProperty(mapKey) && !this.defaultKeys.includes(mapKey)) {\n\t\t\t\tconst val = this.#obj[mapKey];\n\t\t\t\t\n\t\t\t\tswitch (true) {\n\t\t\t\t\tcase val.type instanceof Schema:\n\t\t\t\t\t\tobj[mapKey] = (val.type as Schema<any>).toValue();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase val.type === SchemaId:\n\t\t\t\t\t\tobj[mapKey] = (new SchemaId()).value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase val.type === Date:\n\t\t\t\t\t\tobj[mapKey] = val.defaultValue instanceof Date ? val.defaultValue : nowDate;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tobj[mapKey] = val.defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn obj as T;\n\t}\n}\n\nfunction isSupportedTypeValue(value: any): boolean {\n\treturn value === null || [\n\t\tSchema,\n\t\tSchemaId,\n\t\tDate,\n\t\tNumber,\n\t\tString,\n\t\tBoolean,\n\t\tArray,\n\t\tArrayBuffer,\n\t\tBlob,\n\t\tFloat32Array,\n\t\tFloat64Array,\n\t\tInt8Array,\n\t\tInt16Array,\n\t\tInt32Array,\n\t\tUint8Array,\n\t\tUint8ClampedArray,\n\t\tUint16Array,\n\t\tUint32Array\n\t].some(type => value instanceof type || typeof value === type.name.toLowerCase())\n}\n\nexport namespace Schema {\n\tinterface BlobConstructor {\n\t\tprototype: Blob;\n\t\t\n\t\tnew(blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n\t}\n\t\n\tinterface SchemaIdConstructor {\n\t\tprototype: SchemaId;\n\t\t\n\t\tnew(): SchemaId;\n\t}\n\t\n\texport type Type =\n\t\t| Schema<any>\n\t\t| SchemaIdConstructor\n\t\t| DateConstructor\n\t\t| NumberConstructor\n\t\t| StringConstructor\n\t\t| BooleanConstructor\n\t\t| ArrayConstructor\n\t\t| ArrayBufferConstructor\n\t\t| BlobConstructor\n\t\t| Float32ArrayConstructor\n\t\t| Float64ArrayConstructor\n\t\t| Int8ArrayConstructor\n\t\t| Int16ArrayConstructor\n\t\t| Int32ArrayConstructor\n\t\t| Uint8ArrayConstructor\n\t\t| Uint8ClampedArrayConstructor\n\t\t| Uint16ArrayConstructor\n\t\t| Uint32ArrayConstructor;\n\t\n\texport type ValueType = null\n\t\t| Schema<any>\n\t\t| SchemaId\n\t\t| Date\n\t\t| Number\n\t\t| String\n\t\t| Boolean\n\t\t| Array<ValueType>\n\t\t| ArrayBuffer\n\t\t| Blob\n\t\t| Float32Array\n\t\t| Float64Array\n\t\t| Int8Array\n\t\t| Int16Array\n\t\t| Int32Array\n\t\t| Uint8Array\n\t\t| Uint8ClampedArray\n\t\t| Uint16Array\n\t\t| Uint32Array;\n\t\n\texport interface JSONValue {\n\t\ttype: string | JSON;\n\t\trequired: boolean;\n\t\tdefaultValue: ValueType;\n\t}\n\t\n\texport interface JSON {\n\t\t[k: string]: JSONValue | JSON\n\t}\n\t\n\texport interface Map {\n\t\t[k: string]: SchemaValue\n\t}\n\t\n\texport interface DefaultValue {\n\t\tid?: string;\n\t\tcreatedDate?: Date;\n\t\tlastUpdatedDate?: Date;\n\t}\n}\n", "import localforage, {LOCALSTORAGE, WEBSQL, INDEXEDDB} from 'localforage';\nimport {Schema} from \"./Schema\";\nimport {MEMORY_STORAGE, MemoryStore} from \"./MemoryStore\";\n\nlocalforage.defineDriver(MemoryStore());\n\nconst defaultConfig = {\n\tversion: 1,\n\ttype: [INDEXEDDB, WEBSQL, LOCALSTORAGE, MEMORY_STORAGE],\n\tdescription: \"\",\n\tappName: \"App\",\n}\n\nexport class ClientStore<T extends Schema.DefaultValue> {\n\t#store: LocalForage;\n\t#config: ClientStore.Config;\n\t#storeName: string;\n\t#schema: Schema<T>;\n\t#subscribers: ClientStore.StoreSubscriber[] = [];\n\t#beforeChangeHandler: ClientStore.BeforeChangeHandler = () => true;\n\t#ready = false;\n\t#size = 0;\n\t\n\tconstructor(storeName: string, schema: Schema<T>, config: ClientStore.Config = defaultConfig) {\n\t\tthis.#storeName = storeName;\n\t\tthis.#config = {...defaultConfig, ...config};\n\t\t\n\t\tif (!(schema instanceof Schema)) {\n\t\t\tthrow new Error('Missing or unknown \"Schema\"')\n\t\t}\n\t\t\n\t\tconst name = this.#config.appName || \"App\";\n\t\t\n\t\tthis.#schema = schema;\n\t\tthis.#store = localforage.createInstance({\n\t\t\tdriver: this.#config.type,\n\t\t\tversion: this.#config.version,\n\t\t\tdescription: this.#config.description,\n\t\t\tname,\n\t\t\tstoreName,\n\t\t});\n\t\t\n\t\tthis.#store.ready(() => {\n\t\t\tconsole.info(`[Info] ClientStore \"${storeName}\" successfully created`);\n\t\t\tthis.#ready = true;\n\t\t\tthis.#broadcast(ClientStore.EventType.READY, true);\n\t\t})\n\t}\n\t\n\t/**\n\t * whether the store has successfully loaded\n\t */\n\tget ready() {\n\t\treturn this.#ready;\n\t}\n\t\n\t/**\n\t * the type of the store\n\t */\n\tget type() {\n\t\treturn this.#store.driver();\n\t}\n\t\n\t/**\n\t * name of the store\n\t */\n\tget name() {\n\t\treturn `${this.#config.appName}-${this.#storeName}`;\n\t}\n\t\n\t/**\n\t * the total count of items in the store\n\t */\n\tget size() {\n\t\treturn this.#size;\n\t}\n\t\n\t#broadcast(eventType: ClientStore.EventType, data: any) {\n\t\tthis.#subscribers.forEach(sub => sub(eventType, data))\n\t}\n\t\n\t/**\n\t * subscribe to change in the store and react to them\n\t * @param sub\n\t */\n\tsubscribe(sub: ClientStore.StoreSubscriber): ClientStore.UnSubscriber {\n\t\tif (typeof sub === 'function') {\n\t\t\tthis.#subscribers.push(sub)\n\t\t}\n\t\t\n\t\treturn () => {\n\t\t\tthis.#subscribers = this.#subscribers.filter(s => s !== sub)\n\t\t}\n\t}\n\t\n\t/**\n\t * intercept actions before they are made to the store\n\t * to perform any action before it happens and gets broadcast as event\n\t * @param handler\n\t */\n\tbeforeChange(handler: ClientStore.BeforeChangeHandler): ClientStore.UnSubscriber {\n\t\tif (typeof handler === 'function') {\n\t\t\tthis.#beforeChangeHandler = handler;\n\t\t}\n\t\t\n\t\treturn () => {\n\t\t\tthis.#beforeChangeHandler = () => true;\n\t\t}\n\t}\n\t\n\t/**\n\t * update or create items in bulk\n\t * @param items\n\t */\n\tasync loadItems(items: Partial<T>[] = []): Promise<Array<T | null> | null> {\n\t\tif (items.length) {\n\t\t\ttry {\n\t\t\t\tconst shouldChange = await this.#beforeChangeHandler(ClientStore.EventType.LOADED, items);\n\t\t\t\t\n\t\t\t\tif (shouldChange === true) {\n\t\t\t\t\tconst mappedItems = (await this.getItems()).reduce((acc, item) => ({...acc, [item.id as string]: item}), {} as {[k: string]: T});\n\t\t\t\t\tconst newItems = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (let item of items) {\n\t\t\t\t\t\tlet newItem = mappedItems[item.id as string] || this.#schema.toValue();\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (const itemKey in item) {\n\t\t\t\t\t\t\tif (item.hasOwnProperty(itemKey)) {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\tnewItem[itemKey] = item[itemKey];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tawait this.#store.setItem(`${newItem.id}`, newItem);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnewItems.push(newItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.#size = await this.#store.length();\n\t\t\t\t\tthis.#broadcast(ClientStore.EventType.LOADED, newItems);\n\t\t\t\t\t\n\t\t\t\t\treturn newItems;\n\t\t\t\t} else {\n\t\t\t\t\tthis.#broadcast(ClientStore.EventType.ABORTED, {\n\t\t\t\t\t\taction: ClientStore.EventType.LOADED,\n\t\t\t\t\t\tdata: items\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tthis.#broadcast(ClientStore.EventType.ERROR, {\n\t\t\t\t\taction: ClientStore.EventType.LOADED,\n\t\t\t\t\terror,\n\t\t\t\t\tdata: items\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t * create an item in the store\n\t * @param value\n\t */\n\tasync createItem(value: Partial<T>): Promise<T | null> {\n\t\tconst invalidFields = this.#schema.getInvalidSchemaDataFields(value);\n\n\t\tif (!invalidFields.length) {\n\t\t\tconst newItem = this.#schema.toValue();\n\t\t\t\n\t\t\tfor (const valueKey in value) {\n\t\t\t\tif (value.hasOwnProperty(valueKey) && !this.#schema.defaultKeys.includes(valueKey)) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tnewItem[valueKey] = value[valueKey]\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst shouldChange = await this.#beforeChangeHandler(ClientStore.EventType.CREATED, newItem);\n\t\t\t\t\n\t\t\t\tif (shouldChange === true) {\n\t\t\t\t\tawait this.#store.setItem(`${newItem.id}`, newItem);\n\t\t\t\t\tthis.#size = await this.#store.length();\n\t\t\t\t\tthis.#broadcast(ClientStore.EventType.CREATED, newItem);\n\t\t\t\t\treturn newItem;\n\t\t\t\t} else {\n\t\t\t\t\tthis.#broadcast(ClientStore.EventType.ABORTED, {\n\t\t\t\t\t\taction: ClientStore.EventType.CREATED,\n\t\t\t\t\t\tdata: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Failed to create item \"${JSON.stringify(value, null, 2)}\"`, error);\n\t\t\t\tthis.#broadcast(ClientStore.EventType.ERROR, {\n\t\t\t\t\taction: ClientStore.EventType.CREATED,\n\t\t\t\t\terror,\n\t\t\t\t\tdata: value\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tthrow new Error(`Failed to create item. Field(s) \"${invalidFields.join(', ')}\" do not match the schema: ${this.#schema}`)\n\t}\n\t\n\t/**\n\t * update a single item in the store\n\t * @param id\n\t * @param data\n\t */\n\tasync updateItem(id: T['id'], data: Partial<T>): Promise<T | null> {\n\t\tfor (let dataKey in data) {\n\t\t\tif (data.hasOwnProperty(dataKey) && !this.#schema.defaultKeys.includes(dataKey) && !this.#schema.isValidFieldValue(dataKey, data[dataKey])) {\n\t\t\t\tthrow new Error(`Failed to update item \"${id}\". Key \"${dataKey}\" is unknown or has invalid value type: ${this.#schema.getField(dataKey)}`)\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst item: any = await this.getItem(id);\n\t\tconst updatedItem = {\n\t\t\t...item,\n\t\t\t...data,\n\t\t\tcreatedDate: item.createdDate,\n\t\t\tlastUpdatedDate: new Date(),\n\t\t\tid: item.id\n\t\t};\n\t\t\n\t\ttry {\n\t\t\tconst shouldChange = await this.#beforeChangeHandler(ClientStore.EventType.UPDATED, updatedItem);\n\t\t\t\n\t\t\tif (shouldChange === true) {\n\t\t\t\tawait this.#store.setItem(`${item.id}`, updatedItem);\n\t\t\t\tthis.#broadcast(ClientStore.EventType.UPDATED, updatedItem);\n\t\t\t\treturn updatedItem;\n\t\t\t} else {\n\t\t\t\tthis.#broadcast(ClientStore.EventType.ABORTED, {\n\t\t\t\t\taction: ClientStore.EventType.UPDATED,\n\t\t\t\t\tdata\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`Failed to update item with id \"${id}\"`, error);\n\t\t\tthis.#broadcast(ClientStore.EventType.ERROR, {\n\t\t\t\taction: ClientStore.EventType.UPDATED,\n\t\t\t\terror,\n\t\t\t\tdata\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t * get a list of all items in the store\n\t */\n\tasync getItems(): Promise<Array<T>> {\n\t\treturn this.findItems(() => true);\n\t}\n\t\n\t/**\n\t * get a single item in the store\n\t * @param id\n\t */\n\tgetItem(id: T['id']): Promise<T | null> {\n\t\treturn this.#store.getItem(`${id}`);\n\t}\n\t\n\t/**\n\t * remove a single item from the store\n\t * @param id\n\t */\n\tasync removeItem(id: T['id']): Promise<true | null> {\n\t\ttry {\n\t\t\tconst shouldChange = await this.#beforeChangeHandler(ClientStore.EventType.DELETED, id as T['id']);\n\t\t\t\n\t\t\tif (shouldChange === true) {\n\t\t\t\tawait this.#store.removeItem(`${id}`);\n\t\t\t\tthis.#size = await this.#store.length();\n\t\t\t\tthis.#broadcast(ClientStore.EventType.DELETED, id);\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.#broadcast(ClientStore.EventType.ABORTED, {\n\t\t\t\t\taction: ClientStore.EventType.DELETED,\n\t\t\t\t\tdata: id\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`Failed to delete item with id \"${id}\"`, error);\n\t\t\tthis.#broadcast(ClientStore.EventType.ERROR, {\n\t\t\t\taction: ClientStore.EventType.DELETED,\n\t\t\t\terror,\n\t\t\t\tdata: id\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t * clear the store from all its items\n\t */\n\tasync clear(): Promise<string[] | null> {\n\t\tconst keys: string[] = (await this.#store.keys());\n\t\t\n\t\ttry {\n\t\t\tconst shouldChange = await this.#beforeChangeHandler(ClientStore.EventType.CLEARED, keys);\n\t\t\t\n\t\t\tif (shouldChange) {\n\t\t\t\tawait this.#store.clear();\n\t\t\t\tthis.#size = await this.#store.length();\n\t\t\t\tthis.#broadcast(ClientStore.EventType.CLEARED, keys);\n\t\t\t\treturn keys;\n\t\t\t} else {\n\t\t\t\tthis.#broadcast(ClientStore.EventType.ABORTED, {\n\t\t\t\t\taction: ClientStore.EventType.CLEARED,\n\t\t\t\t\tdata: keys\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(`Failed to clear the store`, error);\n\t\t\tthis.#broadcast(ClientStore.EventType.ERROR, {\n\t\t\t\taction: ClientStore.EventType.CLEARED,\n\t\t\t\terror,\n\t\t\t\tdata: keys\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t/**\n\t * find a single item in the store\n\t * @param cb\n\t */\n\tasync findItem(cb: (value: T, key: string) => boolean = () => false) {\n\t\treturn this.#store.iterate<T, any>((value, key) => {\n\t\t\tconst matched = cb(value, key);\n\t\t\tif (matched) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}) || null;\n\t}\n\t\n\t/**\n\t * find multiple items in the store\n\t * @param cb\n\t */\n\tasync findItems(cb: (value: T, key: string) => boolean = () => false) {\n\t\tconst items: T[] = [];\n\t\t\n\t\tawait this.#store.iterate<T, any>((value, key) => {\n\t\t\tif (cb(value, key)) {\n\t\t\t\tvalue && items.push(value)\n\t\t\t}\n\t\t})\n\t\t\n\t\treturn items;\n\t}\n}\n\nexport namespace ClientStore {\n\texport type StoreSubscriber = (eventType: ClientStore.EventType, id?: number | number[] | null) => void;\n\t\n\texport type UnSubscriber = () => void;\n\t\n\texport type BeforeChangeHandler = (eventType: ClientStore.EventType, data: any) => Promise<boolean> | boolean;\n\t\n\texport interface Config {\n\t\tappName?: string;\n\t\tversion?: LocalForageOptions['version'];\n\t\ttype?: LocalForageOptions['driver'] | string;\n\t\tdescription?: LocalForageOptions['description'];\n\t}\n\t\n\texport enum EventType {\n\t\tREADY = \"ready\",\n\t\tCREATED = \"created\",\n\t\tLOADED = \"loaded\",\n\t\tERROR = \"error\",\n\t\tABORTED = \"aborted\",\n\t\tDELETED = \"deleted\",\n\t\tUPDATED = \"updated\",\n\t\tCLEARED = \"cleared\"\n\t}\n\t\n\texport const Type = {\n\t\tLOCALSTORAGE,\n\t\tWEBSQL,\n\t\tINDEXEDDB,\n\t\tMEMORY_STORAGE\n\t}\n}\n", "type errCallback = (err: any) => void;\ntype successCallback<T> = (err: any, value: T) => void\ntype iteratee<T, U> = (value: T, key: string, iterationNumber: number) => U;\n\nconst callBackOrPromise = <T>(value: T, cb?: errCallback | successCallback<T>) => {\n\treturn typeof cb === \"function\" ? cb(null, value) : Promise.resolve(value);\n}\n\n\texport const MEMORY_STORAGE = \"Memory\"\n\nexport const MemoryStore = (): LocalForageDriver => {\n\tconst map = new Map();\n\t\n\treturn {\n\t\t_driver: MEMORY_STORAGE,\n\t\t_initStorage() {\n\t\t\treturn map;\n\t\t},\n\t\tasync clear(cb: errCallback) {\n\t\t\tcallBackOrPromise(map.clear(), cb);\n\t\t},\n\t\tasync getItem<T>(id: string, cb?: successCallback<T>) {\n\t\t\treturn callBackOrPromise(map.get(id) ?? null, cb) || null;\n\t\t},\n\t\t// @ts-ignore\n\t\tasync iterate<T, U>(cb: iteratee<T, U>, onErr?: successCallback<U>) {\n\t\t\tlet i = 0;\n\t\t\tlet res: U;\n\t\t\t\n\t\t\tfor (let [key, value] of map.entries()) {\n\t\t\t\tres = cb(value, key, i);\n\t\t\t\tif (res !== undefined) {\n\t\t\t\t\treturn callBackOrPromise(res, onErr);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\t\n\t\t\treturn callBackOrPromise<any>(null, onErr);\n\t\t},\n\t\tasync key(key: number, cb?: successCallback<string>) {\n\t\t\treturn callBackOrPromise<string>(Array.from(map.keys())[key], cb) || \"\";\n\t\t},\n\t\tasync keys(cb?: successCallback<string[]>) {\n\t\t\treturn callBackOrPromise<string[]>(Array.from(map.keys()), cb) || [];\n\t\t},\n\t\tasync length(cb?: successCallback<number>) {\n\t\t\treturn callBackOrPromise<number>(map.size, cb) || 0;\n\t\t},\n\t\tasync removeItem(id: string, cb?: successCallback<null>) {\n\t\t\treturn callBackOrPromise<any>(map.delete(id), cb);\n\t\t},\n\t\tasync setItem<T>(id: any, value: any, cb?: successCallback<T>) {\n\t\t\treturn callBackOrPromise<any>(map.set(id, value), cb);\n\t\t},\n\t}\n}\n", "import {Schema, SchemaValue, SchemaId} from './Schema';\nimport {ClientStore} from './ClientStore';\n\n// @ts-ignore\nif (window) {\n\t// @ts-ignore\n\twindow.Schema = Schema;\n\t// @ts-ignore\n\twindow.SchemaValue = SchemaValue;\n\t// @ts-ignore\n\twindow.SchemaId = SchemaId;\n\t// @ts-ignore\n\twindow.ClientStore = ClientStore;\n}\n"],
  "mappings": "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",
  "names": []
}
